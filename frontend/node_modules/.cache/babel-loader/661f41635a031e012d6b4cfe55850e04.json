{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marie\\\\Desktop\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\fonction.js\";\nimport './fonction.css';\nimport React from \"react\"; //import Popup from \"reactjs-popup\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props); //initialise l'état sur OFF\n\n    this.state = {\n      isToggleOn: false\n    }; // Cette liaison est nécéssaire afin de permettre\n    // l'utilisation de `this` dans la fonction de rappel.\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      //inverse l'état du bouton lorsqu'on clique dessus\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"icon.png\",\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), this.state.isToggleOn ? 'ON' : 'OFF');\n  }\n\n}\n\nexport default Test;\nexport function aled() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"aloooooooooooo\"));\n}","map":{"version":3,"sources":["C:/Users/marie/Desktop/PROJECT_WEB_OCRES/frontend/src/components/fonction.js"],"names":["React","Test","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","render","aled"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAHiB,CAKjB;AACA;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtB;AACAC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAFG,KAAL,CAAnB;AAID;;AAGDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAC,UAAhB;AAA2B,MAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KAFlC,CADF;AAUD;;AA9BgC;;AA+BjC,eAAeL,IAAf;AAEF,OAAO,SAASU,IAAT,GAAe;AAEpB,SACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADC;AAOD","sourcesContent":["import './fonction.css'\r\nimport React from \"react\";\r\n//import Popup from \"reactjs-popup\";\r\n\r\nclass Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //initialise l'état sur OFF\r\n    this.state = {isToggleOn: false};\r\n\r\n    // Cette liaison est nécéssaire afin de permettre\r\n    // l'utilisation de `this` dans la fonction de rappel.\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(state => ({\r\n      //inverse l'état du bouton lorsqu'on clique dessus\r\n      isToggleOn: !state.isToggleOn\r\n    }));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.handleClick}>\r\n        <img alt=\"\" src=\"icon.png\" className=\"icon\"/>\r\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n      </button>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n} export default Test;\r\n\r\nexport function aled(){\r\n\r\n  return(\r\n <div>\r\n   <h1>\r\n     aloooooooooooo\r\n   </h1>\r\n </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}