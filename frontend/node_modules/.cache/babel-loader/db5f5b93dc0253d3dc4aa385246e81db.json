{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marie\\\\Desktop\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\recette.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport CanvasJSReact from '../canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst API_URL = \"https://foodish-api.herokuapp.com/api/\";\nconst API_URL1 = \"https://foodish-api.herokuapp.com/api/\";\nconst API_URL2 = \"https://foodish-api.herokuapp.com/api/\";\nexport class Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image1: '',\n      image2: '',\n      image3: ''\n    };\n    /*calories: 800,\r\n    protein: 60,\r\n    fat: 300,\r\n    sugar: 80,\r\n    },\r\n    {\r\n    \r\n    calories: 700,\r\n    protein: 80,\r\n    fat: 360,\r\n    sugar: 180,\r\n    },\r\n    {\r\n    \r\n    calories: 700,\r\n    protein: 80,\r\n    fat: 360,\r\n    sugar: 180,*/\n\n    this.fetchTodayForecast = this.fetchTodayForecast.bind(this); //this.fetchRecipe = this.fetchRecipe.bind(this);\n    //this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTodayForecast().then(response => {\n      // Récupère la donnée d'une API\n      const data = response.data;\n      console.log(data); // On récupère l'information principal\n\n      const slide1 = data.image1;\n      const slide2 = data.image2;\n      const slide3 = data.image3;\n      /*write information in state*/\n\n      this.setState({\n        slide1\n      });\n      /* ? */\n\n      this.setState({\n        slide2\n      });\n      this.setState({\n        slide3\n      }); //Affiche de l'url dans la console\n\n      console.log(slide1);\n      console.log(slide2);\n      console.log(slide3);\n    });\n  }\n  /*\r\n    writeRecipesToState(result){\r\n      const newRecipe = {\r\n        image1: result.image1,\r\n        image2: result.image2,\r\n        image3: result.image3,\r\n        //calories: result.nutrition.nutrients[0].amount,\r\n       // protein: result.nutrition.nutrients[1].amount,\r\n       // fat: result.nutrition.nutrients[2].amount,\r\n       // sugar: result.nutrition.nutrients[3].amount,\r\n      }\r\n      this.setState({\r\n        recipes: [\r\n          ...this.state.recipes,\r\n          newRecipe\r\n        ]\r\n      })\r\n    }*/\n\n\n  fetchTodayForecast() {\n    return axios.get(\"\".concat(API_URL, \"?q=\").concat(this.state1.slide1), {\n      crossdomain: true\n    });\n  }\n\n  getHTMLElement2() {\n    return axios.get(\"\".concat(API_URL1, \"?q=\").concat(this.state2.slide2), {\n      crossdomain: true\n    });\n  }\n  /*fetchRecipe(){\r\n    return axios\r\n    //assemble API with Key and set nutrition parameters\r\n   // .get(`${API_URL}?apiKey=${API_KEY}&includeNutrition=true`, {\r\n      .get(`${API_URL}?apiKey=${API_KEY}&maxFat=25&maxSugar=30&minProtein=25&maxCalories=600&number=3`, {\r\n      crossdomain: true\r\n    })\r\n  }*/\n\n  /*getHTMLElementFromImage(image){\r\n    //return `<img src=${API_IMAGE_URL}${recipeID}-312x231@2x.jpg class=\"weather-icon\"/>`\r\n  }\r\n  \r\n  handleSelect(activeRecipe, e) {\r\n    this.setState({activeRecipe});\r\n  };*/\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"carouselExampleIndicators\",\n      className: \"carousel slide\",\n      \"data-ride\": \"carousel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"carousel-indicators\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      \"data-target\": \"#carouselExampleIndicators\",\n      \"data-slide-to\": \"0\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      \"data-target\": \"#carouselExampleIndicators\",\n      \"data-slide-to\": \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      \"data-target\": \"#carouselExampleIndicators\",\n      \"data-slide-to\": \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"carousel-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"carousel-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"1 slide\",\n      src: \"\".concat(this.state1.slide1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"carousel-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"2 slide\",\n      src: \"\".concat(this.state2.slide2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"carousel-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"3 slide\",\n      src: \"\".concat(this.state3.slide3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(\"a\", {\n      className: \"carousel-control-prev\",\n      href: \"#carouselExampleIndicators\",\n      role: \"button\",\n      \"data-slide\": \"prev\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"carousel-control-prev-icon\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Previous\")), React.createElement(\"a\", {\n      className: \"carousel-control-next\",\n      href: \"#carouselExampleIndicators\",\n      role: \"button\",\n      \"data-slide\": \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"carousel-control-next-icon\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}\nexport default Recipe;\n/*</div><div>\r\n<Carousel activeIndex={this.state.activeRecipe} onSelect={this.handleSelect}>\r\n{this.state.recipes.map((recipe, index) => {\r\n  const options = {\r\n    // title: {\r\n    //   text: \"Basic Column Chart in React\"\r\n    // },\r\n    data: [{\t\t\t\t\r\n      type: \"pie\",\r\n      startAngle: 240,\r\n      yValueFormatString: \"##0.0\\\"g\\\"\",\r\n      indexLabel: \"{label} {y}\",\r\n      dataPoints: [\r\n        {y: recipe.protein, label: \"Protéines\"},\r\n        {y: recipe.fat, label: \"Gras\"},\r\n        {y: recipe.sugar, label: \"Sucre\"},\r\n      ]\r\n     }]\r\n    }\r\n  return (\r\n  <Carousel.Item key={recipe.title}>\r\n    <div className=\"d-flex flex-row container\">\r\n      <div className=\"recipe-img\">\r\n        <img\r\n            src={recipe.image}\r\n            alt={recipe.title}\r\n          />\r\n      </div>\r\n    </div>\r\n  </Carousel.Item>\r\n)}\r\n)}\r\n</Carousel>\r\n</div> \r\n)}\r\n}*/","map":{"version":3,"sources":["C:/Users/marie/Desktop/PROJECT_WEB_OCRES/frontend/src/components/recette.js"],"names":["React","axios","CanvasJSReact","CanvasJSChart","API_URL","API_URL1","API_URL2","Recipe","Component","constructor","props","state","image1","image2","image3","fetchTodayForecast","bind","componentDidMount","then","response","data","console","log","slide1","slide2","slide3","setState","get","state1","crossdomain","getHTMLElement2","state2","render","state3"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport axios from \"axios\";\r\nimport CanvasJSReact from '../canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\n// var CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nconst API_URL = \"https://foodish-api.herokuapp.com/api/\";\r\nconst API_URL1 = \"https://foodish-api.herokuapp.com/api/\";\r\nconst API_URL2 = \"https://foodish-api.herokuapp.com/api/\";\r\n\r\nexport class Recipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image1: '',\r\n      image2: '',\r\n      image3: '',\r\n    }\r\n        /*calories: 800,\r\n        protein: 60,\r\n        fat: 300,\r\n        sugar: 80,\r\n        },\r\n        {\r\n        \r\n        calories: 700,\r\n        protein: 80,\r\n        fat: 360,\r\n        sugar: 180,\r\n        },\r\n        {\r\n        \r\n        calories: 700,\r\n        protein: 80,\r\n        fat: 360,\r\n        sugar: 180,*/\r\n        \r\n\r\n    \r\n    this.fetchTodayForecast = this.fetchTodayForecast.bind(this);\r\n    //this.fetchRecipe = this.fetchRecipe.bind(this);\r\n    //this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchTodayForecast()\r\n    .then((response) => {\r\n      // Récupère la donnée d'une API\r\n      const data = response.data;\r\n      console.log(data);\r\n      // On récupère l'information principal\r\n      const slide1 = data.image1;\r\n      const slide2 = data.image2;\r\n      const slide3 = data.image3;\r\n      \r\n      /*write information in state*/\r\n      this.setState({slide1}); /* ? */\r\n      this.setState({slide2});\r\n      this.setState({slide3});\r\n      //Affiche de l'url dans la console\r\n      console.log(slide1);\r\n      console.log(slide2);\r\n      console.log(slide3);\r\n  })\r\n}\r\n\r\n\r\n\r\n/*\r\n  writeRecipesToState(result){\r\n    const newRecipe = {\r\n      image1: result.image1,\r\n      image2: result.image2,\r\n      image3: result.image3,\r\n      //calories: result.nutrition.nutrients[0].amount,\r\n     // protein: result.nutrition.nutrients[1].amount,\r\n     // fat: result.nutrition.nutrients[2].amount,\r\n     // sugar: result.nutrition.nutrients[3].amount,\r\n    }\r\n    this.setState({\r\n      recipes: [\r\n        ...this.state.recipes,\r\n        newRecipe\r\n      ]\r\n    })\r\n  }*/\r\n\r\n  fetchTodayForecast(){\r\n    return axios\r\n    .get(`${API_URL}?q=${this.state1.slide1}`, {\r\n        crossdomain: true\r\n    })\r\n  }\r\n\r\n  getHTMLElement2(){\r\n    return axios\r\n    .get(`${API_URL1}?q=${this.state2.slide2}`, {\r\n      crossdomain: true\r\n  })\r\n  }\r\n\r\n  /*fetchRecipe(){\r\n    return axios\r\n    //assemble API with Key and set nutrition parameters\r\n   // .get(`${API_URL}?apiKey=${API_KEY}&includeNutrition=true`, {\r\n      .get(`${API_URL}?apiKey=${API_KEY}&maxFat=25&maxSugar=30&minProtein=25&maxCalories=600&number=3`, {\r\n      crossdomain: true\r\n    })\r\n  }*/\r\n\r\n  /*getHTMLElementFromImage(image){\r\n    //return `<img src=${API_IMAGE_URL}${recipeID}-312x231@2x.jpg class=\"weather-icon\"/>`\r\n  }\r\n  \r\n  handleSelect(activeRecipe, e) {\r\n    this.setState({activeRecipe});\r\n  };*/\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n        <ol className=\"carousel-indicators\">\r\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n          <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">\r\n          <img className=\"d-block w-100 image\" alt=\"1 slide\" src={`${this.state1.slide1}`}></img>\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n          <img className=\"d-block w-100 image\" alt=\"2 slide\" src={`${this.state2.slide2}`}></img>\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n          <img className=\"d-block w-100 image\" alt=\"3 slide\" src={`${this.state3.slide3}`}></img>\r\n          </div>\r\n        </div>\r\n        <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n  export default Recipe;\r\n\r\n\r\n\r\n\r\n\r\n      /*</div><div>\r\n      <Carousel activeIndex={this.state.activeRecipe} onSelect={this.handleSelect}>\r\n      {this.state.recipes.map((recipe, index) => {\r\n        const options = {\r\n          // title: {\r\n          //   text: \"Basic Column Chart in React\"\r\n          // },\r\n          data: [{\t\t\t\t\r\n            type: \"pie\",\r\n            startAngle: 240,\r\n            yValueFormatString: \"##0.0\\\"g\\\"\",\r\n            indexLabel: \"{label} {y}\",\r\n            dataPoints: [\r\n              {y: recipe.protein, label: \"Protéines\"},\r\n              {y: recipe.fat, label: \"Gras\"},\r\n              {y: recipe.sugar, label: \"Sucre\"},\r\n            ]\r\n           }]\r\n          }\r\n        return (\r\n        <Carousel.Item key={recipe.title}>\r\n          <div className=\"d-flex flex-row container\">\r\n            <div className=\"recipe-img\">\r\n              <img\r\n                  src={recipe.image}\r\n                  alt={recipe.title}\r\n                />\r\n            </div>\r\n          </div>\r\n        </Carousel.Item>\r\n      )}\r\n      )}\r\n      </Carousel>\r\n    </div> \r\n    )}\r\n}*/\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}