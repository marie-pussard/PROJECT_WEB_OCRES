{"ast":null,"code":"var _jsxFileName = \"/Users/jakobzettel/Documents/GitHub/PROJECT_WEB_OCRES/frontend/src/widgets/meteo.js\";\nimport './meteo.css';\nimport React from 'react';\nimport axios from \"axios\"; // Clé api\n\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\"; // Url API\n\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\"; // Base source icon\n\nconst API_URL_ICON = \"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/1.2/css/weather-icons.min.css\";\nexport class Meteo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"paris\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTodayForecast().then(function (response) {\n      // Récupère la donnée d'une API\n      const data = response.data; // On récupère l'information principal\n\n      const main = data.list[0].weather[0].main;\n      /*const description = data.list[0].weather[0].description;\n      const temp = data.list[0].temp.day;\n      const icon = Meteo.getHTMLElementFromIcon(data.list[0].weather[0].icon);*/\n      // Modifier le DOM\n\n      /*in state schreiben*/\n\n      this.setState({\n        today_forecast_main: main\n      });\n      /* ? */\n\n      console.log(main);\n      /*document.getElementById('today-forecast-main').innerHTML = main;\n      document.getElementById('today-forecast-more-info').innerHTML = description;\n      document.getElementById('icon-weather-container').innerHTML = icon;\n      document.getElementById('today-forecast-temp').innerHTML = `${temp}°C`;*/\n    });\n  }\n\n  fetchTodayForecast() {\n    return axios.get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\n      crossdomain: true\n    });\n  }\n\n  getHTMLElementFromIcon(icon) {\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"weather_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"currentTemp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, \"23\\xB0\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, this.state.city)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"currentWeather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"conditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, \"\\uF00D\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"rain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, \"1.3 MM\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"wind\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, \"10 MPH\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jakobzettel/Documents/GitHub/PROJECT_WEB_OCRES/frontend/src/widgets/meteo.js"],"names":["React","axios","API_KEY","API_URL","API_URL_ICON","Meteo","Component","constructor","props","state","city","componentDidMount","fetchTodayForecast","then","response","data","main","list","weather","setState","today_forecast_main","console","log","get","crossdomain","getHTMLElementFromIcon","icon","render"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,MAAMC,OAAO,GAAG,iDAAhB,C,CACA;;AACA,MAAMC,YAAY,GAAG,oFAArB;AAGA,OAAO,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC;AADM,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,kBAAL,GACCC,IADD,CACM,UAASC,QAAT,EAAmB;AACvB;AACA,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB,CAFuB,CAGvB;;AACA,YAAMC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqB,CAArB,EAAwBF,IAArC;AACA;AACN;AACA;AACM;;AACA;;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,mBAAmB,EAACJ;AAArB,OAAd;AAA2C;;AAC3CK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA;AACN;AACA;AACA;AACG,KAjBC;AAkBH;;AACCJ,EAAAA,kBAAkB,GAAE;AAClB,WAAOX,KAAK,CACXsB,GADM,CACD,GAAEpB,OAAQ,MAAK,KAAKO,IAAK,6BAA4BR,OAAQ,EAD5D,EAC+D;AACpEsB,MAAAA,WAAW,EAAE;AADuD,KAD/D,CAAP;AAID;;AAEDC,EAAAA,sBAAsB,CAACC,IAAD,EAAM;AAC1B,WAAQ,YAAWtB,YAAa,GAAEsB,IAAK,gCAAvC;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKlB,KAAL,CAAWC,IAAvC,CAFD,CADD,eAKC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CAFD,CALD,CADK,CADF;AAiBD;;AAxDwC","sourcesContent":["import './meteo.css';\nimport React from 'react';\nimport axios from \"axios\";\n\n// Clé api\nconst API_KEY = \"4081444b7b90198136fefe6ed4ccf35b\";\n// Url API\nconst API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n// Base source icon\nconst API_URL_ICON = \"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/1.2/css/weather-icons.min.css\";\n\n\nexport class Meteo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city:\"paris\"\n    };\n  }\n  componentDidMount(){\n    this.fetchTodayForecast()\n    .then(function(response) {\n      // Récupère la donnée d'une API\n      const data = response.data;\n      // On récupère l'information principal\n      const main = data.list[0].weather[0].main;\n      /*const description = data.list[0].weather[0].description;\n      const temp = data.list[0].temp.day;\n      const icon = Meteo.getHTMLElementFromIcon(data.list[0].weather[0].icon);*/\n      // Modifier le DOM\n      /*in state schreiben*/\n      this.setState({today_forecast_main:main}); /* ? */\n      console.log(main);\n      /*document.getElementById('today-forecast-main').innerHTML = main;\n      document.getElementById('today-forecast-more-info').innerHTML = description;\n      document.getElementById('icon-weather-container').innerHTML = icon;\n      document.getElementById('today-forecast-temp').innerHTML = `${temp}°C`;*/\n  })\n}\n  fetchTodayForecast(){\n    return axios\n    .get(`${API_URL}?q=${this.city}&cnt=4&units=metric&appid=${API_KEY}`, {\n      crossdomain: true\n    })\n  }\n\n  getHTMLElementFromIcon(icon){\n    return `<img src=${API_URL_ICON}${icon}@2x.png class=\"weather-icon\"/>`\n  }\n\n  render(){\n    return(\n      <div id=\"weather_wrapper\">\n\t<div className=\"weatherCard\">\n\t\t<div className=\"currentTemp\">\n\t\t\t<span className=\"temp\">23&deg;</span>\n\t\t\t<span className=\"location\">{this.state.city}</span>\n\t\t</div>\n\t\t<div className=\"currentWeather\">\n\t\t\t<span className=\"conditions\">&#xf00d;</span>\n\t\t\t<div className=\"info\">\n\t\t\t\t<span className=\"rain\">1.3 MM</span>\n\t\t\t\t<span className=\"wind\">10 MPH</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}