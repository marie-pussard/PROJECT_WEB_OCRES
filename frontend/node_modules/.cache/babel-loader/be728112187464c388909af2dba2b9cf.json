{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marie\\\\Desktop\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\recette.js\";\nimport React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport axios from \"axios\";\nimport CanvasJSReact from '../canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n// var CanvasJS = CanvasJSReact.CanvasJS;\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst API_URL = \"https://foodish-api.herokuapp.com/api/\";\nexport class Recipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeRecipe: 0,\n      recipes: [{\n        image: '',\n        calories: 800,\n        protein: 60,\n        fat: 300,\n        sugar: 80\n      }, {\n        image: '',\n        calories: 700,\n        protein: 80,\n        fat: 360,\n        sugar: 180\n      }, {\n        image: '',\n        calories: 700,\n        protein: 80,\n        fat: 360,\n        sugar: 180\n      }]\n    };\n    this.fetchTodayForecast = this.fetchTodayForecast.bind(this); //this.fetchRecipe = this.fetchRecipe.bind(this);\n\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchTodayForecast().then(response => {\n      // Récupère la donnée d'une API\n      const data = response.data; // On récupère l'information principal\n\n      const image = data.image; //const \n\n      /*write information in state*/\n\n      this.setState({\n        image\n      });\n      /* ? */\n\n      console.log(image);\n    });\n  }\n\n  writeRecipesToState(result) {\n    const newRecipe = {\n      image: result.image //calories: result.nutrition.nutrients[0].amount,\n      // protein: result.nutrition.nutrients[1].amount,\n      // fat: result.nutrition.nutrients[2].amount,\n      // sugar: result.nutrition.nutrients[3].amount,\n\n    };\n    this.setState({\n      recipes: [...this.state.recipes, newRecipe]\n    });\n  }\n\n  fetchTodayForecast() {\n    return axios.get(\"\".concat(API_URL, \"?q=\").concat(this.state), {\n      crossdomain: true\n    });\n  }\n  /*fetchRecipe(){\r\n    return axios\r\n    //assemble API with Key and set nutrition parameters\r\n   // .get(`${API_URL}?apiKey=${API_KEY}&includeNutrition=true`, {\r\n      .get(`${API_URL}?apiKey=${API_KEY}&maxFat=25&maxSugar=30&minProtein=25&maxCalories=600&number=3`, {\r\n      crossdomain: true\r\n    })\r\n  }*/\n\n  /*getHTMLElementFromImage(image){\r\n    //return `<img src=${API_IMAGE_URL}${recipeID}-312x231@2x.jpg class=\"weather-icon\"/>`\r\n  }*/\n\n\n  handleSelect(activeRecipe, e) {\n    this.setState({\n      activeRecipe\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"carouselExampleSlidesOnly\",\n      class: \"carousel slide\",\n      \"data-ride\": \"carousel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"carousel-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"carousel-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"Fisrt slide\",\n      src: \"\".concat(this.state.image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"carousel-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"Second slide\",\n      src: \"\".concat(this.state.image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"carousel-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"d-block w-100 image\",\n      alt: \"Third slide\",\n      src: \"\".concat(this.state.image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Recipe;\n/*</div><div>\r\n<Carousel activeIndex={this.state.activeRecipe} onSelect={this.handleSelect}>\r\n{this.state.recipes.map((recipe, index) => {\r\n  const options = {\r\n    // title: {\r\n    //   text: \"Basic Column Chart in React\"\r\n    // },\r\n    data: [{\t\t\t\t\r\n      type: \"pie\",\r\n      startAngle: 240,\r\n      yValueFormatString: \"##0.0\\\"g\\\"\",\r\n      indexLabel: \"{label} {y}\",\r\n      dataPoints: [\r\n        {y: recipe.protein, label: \"Protéines\"},\r\n        {y: recipe.fat, label: \"Gras\"},\r\n        {y: recipe.sugar, label: \"Sucre\"},\r\n      ]\r\n     }]\r\n    }\r\n  return (\r\n  <Carousel.Item key={recipe.title}>\r\n    <div className=\"d-flex flex-row container\">\r\n      <div className=\"recipe-img\">\r\n        <img\r\n            src={recipe.image}\r\n            alt={recipe.title}\r\n          />\r\n      </div>\r\n    </div>\r\n  </Carousel.Item>\r\n)}\r\n)}\r\n</Carousel>\r\n</div> \r\n)}\r\n}*/","map":{"version":3,"sources":["C:/Users/marie/Desktop/PROJECT_WEB_OCRES/frontend/src/components/recette.js"],"names":["React","Carousel","axios","CanvasJSReact","CanvasJSChart","API_URL","Recipe","Component","constructor","props","state","activeRecipe","recipes","image","calories","protein","fat","sugar","fetchTodayForecast","bind","handleSelect","componentDidMount","then","response","data","setState","console","log","writeRecipesToState","result","newRecipe","get","crossdomain","e","render"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport axios from \"axios\";\r\nimport CanvasJSReact from '../canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\n// var CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nconst API_URL = \"https://foodish-api.herokuapp.com/api/\";\r\n\r\nexport class Recipe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeRecipe: 0,\r\n      recipes: [\r\n        {\r\n        image: '',\r\n        calories: 800,\r\n        protein: 60,\r\n        fat: 300,\r\n        sugar: 80,\r\n        },\r\n        {\r\n        image: '',\r\n        calories: 700,\r\n        protein: 80,\r\n        fat: 360,\r\n        sugar: 180,\r\n        },\r\n        {\r\n        image: '',\r\n        calories: 700,\r\n        protein: 80,\r\n        fat: 360,\r\n        sugar: 180,\r\n        },\r\n\r\n    ]\r\n     }\r\n    this.fetchTodayForecast = this.fetchTodayForecast.bind(this);\r\n    //this.fetchRecipe = this.fetchRecipe.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    this.fetchTodayForecast()\r\n    .then((response) => {\r\n      // Récupère la donnée d'une API\r\n      const data = response.data;\r\n      // On récupère l'information principal\r\n      const image = data.image;\r\n      //const \r\n      /*write information in state*/\r\n      this.setState({image}); /* ? */\r\n      console.log(image);\r\n  })\r\n}\r\n\r\n  writeRecipesToState(result){\r\n    const newRecipe = {\r\n      image: result.image,\r\n      //calories: result.nutrition.nutrients[0].amount,\r\n     // protein: result.nutrition.nutrients[1].amount,\r\n     // fat: result.nutrition.nutrients[2].amount,\r\n     // sugar: result.nutrition.nutrients[3].amount,\r\n    }\r\n    this.setState({\r\n      recipes: [\r\n        ...this.state.recipes,\r\n        newRecipe\r\n      ]\r\n    })\r\n  }\r\n\r\n  fetchTodayForecast(){\r\n    return axios\r\n    .get(`${API_URL}?q=${this.state}`, {\r\n        crossdomain: true\r\n    })\r\n}\r\n\r\n  \r\n  /*fetchRecipe(){\r\n    return axios\r\n    //assemble API with Key and set nutrition parameters\r\n   // .get(`${API_URL}?apiKey=${API_KEY}&includeNutrition=true`, {\r\n      .get(`${API_URL}?apiKey=${API_KEY}&maxFat=25&maxSugar=30&minProtein=25&maxCalories=600&number=3`, {\r\n      crossdomain: true\r\n    })\r\n  }*/\r\n\r\n  /*getHTMLElementFromImage(image){\r\n    //return `<img src=${API_IMAGE_URL}${recipeID}-312x231@2x.jpg class=\"weather-icon\"/>`\r\n  }*/\r\n  \r\n  handleSelect(activeRecipe, e) {\r\n    this.setState({activeRecipe});\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"carouselExampleSlidesOnly\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img className=\"d-block w-100 image\" alt=\"Fisrt slide\" src={`${this.state.image}`}></img>\r\n          </div>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img className=\"d-block w-100 image\" alt=\"Second slide\" src={`${this.state.image}`}></img>\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img className=\"d-block w-100 image\" alt=\"Third slide\" src={`${this.state.image}`}></img>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  export default Recipe;\r\n\r\n\r\n      /*</div><div>\r\n      <Carousel activeIndex={this.state.activeRecipe} onSelect={this.handleSelect}>\r\n      {this.state.recipes.map((recipe, index) => {\r\n        const options = {\r\n          // title: {\r\n          //   text: \"Basic Column Chart in React\"\r\n          // },\r\n          data: [{\t\t\t\t\r\n            type: \"pie\",\r\n            startAngle: 240,\r\n            yValueFormatString: \"##0.0\\\"g\\\"\",\r\n            indexLabel: \"{label} {y}\",\r\n            dataPoints: [\r\n              {y: recipe.protein, label: \"Protéines\"},\r\n              {y: recipe.fat, label: \"Gras\"},\r\n              {y: recipe.sugar, label: \"Sucre\"},\r\n            ]\r\n           }]\r\n          }\r\n        return (\r\n        <Carousel.Item key={recipe.title}>\r\n          <div className=\"d-flex flex-row container\">\r\n            <div className=\"recipe-img\">\r\n              <img\r\n                  src={recipe.image}\r\n                  alt={recipe.title}\r\n                />\r\n            </div>\r\n          </div>\r\n        </Carousel.Item>\r\n      )}\r\n      )}\r\n      </Carousel>\r\n    </div> \r\n    )}\r\n}*/\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}